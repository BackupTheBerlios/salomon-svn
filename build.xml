<project name="salomon" default="all" basedir=".">

	<property name="src_dir" value="src"/>

	
	<property name="bin_dir" value="bin"/>
	<property name="lib_dir" value="lib"/>	
	<property name="res_dir" value="res"/>
	<property name="plugin_dir" value="plugins"/>
	<property name="db_dir" value="db"/>
	<property name="db_file" value="salomon.gdb"/>	
	<property name="release_dir" value="_release" />

	<target name="compile_salomon" >
		<echo message="Build salomon core"/>
		<javac srcdir="${src_dir}/" 
		       includes="salomon/**"
		classpath="${lib_dir}/log4j-1.2.8.jar"		
		       destdir="${bin_dir}" />
	</target>
	
	<target name="build_averageprice_jar" >
		<jar destfile="${plugin_dir}/AveragePrice.jar" basedir="${bin_dir}"	   
			includes="pl/**/averageprice/**">	
			<manifest>				
			<attribute name="Main-Class" value="pl.edu.agh.icsr.salomon.plugin.averageprice.AveragePrice"/>      	
		</manifest>
		</jar>		
		
	</target>

	<target name="build_simpleconsole_jar" >
		<jar destfile="${plugin_dir}/SimpleSQLConsole.jar" basedir="${bin_dir}"	   
			includes="pl/**/simpleconsole/**">	
			<manifest>				
			<attribute name="Main-Class" value="pl.edu.agh.icsr.salomon.plugin.simpleconsole.SimpleConsole"/>      	
		</manifest>
		</jar>		
		
	</target>


	<target name="build_salomon_jar" depends="build_rmi_stubs">
		<jar destfile="salomon.jar"	   			
			includes="${bin_dir}/salomon/**">	
			<manifest>				
			<attribute name="Main-Class" value="salomon.Starter"/>      	
			<attribute name="Class-Path" value="${lib_dir}/firebirdsql.jar ${lib_dir}/log4j-1.2.8.jar ${lib_dir}/mini-j2ee.jar ."/>      			   
		</manifest>
		</jar>		
	</target>

	<target name="build_plugin_jars" depends="build_simpleconsole_jar, build_averageprice_jar"/>		
	

	<target name="build_jars" depends="build_plugin_jars, build_salomon_jar"/>

	
	<target name="copy_data_base">
		<mkdir dir="${release_dir}/${db_dir}"/>			
		<copy 	file="${db_dir}/${db_file}"
			todir="${release_dir}/${db_dir}"/>
	</target>

	<target name="copy_res">
		<mkdir dir="${release_dir}/${res_dir}"/>	
		<copy todir="${release_dir}/${res_dir}">
			<fileset dir="${basedir}/${res_dir}"/>
		</copy>	
	</target>

	<target name="copy_config">
		<mkdir dir="${release_dir}"/>	
		<copy todir="${release_dir}">
			<fileset file="*.conf" />
			<fileset file="${src_dir}/*.properties"/>
		</copy>	
	</target>	

	<target name="copy_plugins" depends="build_plugin_jars">
		<mkdir dir="${release_dir}/${plugin_dir}"/>	
		<copy 	todir="${release_dir}/${plugin_dir}">
			<fileset file="${plugin_dir}/*.jar"/>	
		</copy>
	</target>	

	<target name="copy_libs">
		<mkdir dir="${release_dir}/${lib_dir}"/>	
		<copy 	todir="${release_dir}/${lib_dir}">
			<fileset file="${lib_dir}/*.jar"/>	
		</copy>
	</target>	

	<target name="copy_drivers">
		<copy 	todir="${release_dir}">
			<fileset file="*.dll"/>	
		</copy>
	</target>	
	
	<target name="copy_salomon" depends="build_salomon_jar">
		<mkdir dir="${release_dir}"/>	
		<copy 	file="salomon.jar"
			todir="${release_dir}"/>
	</target>

	
	
	<target name="build_rmi_stubs" >
		<rmic classname="salomon.core.remote.MasterController" base="${bin_dir}"/>
		<rmic classname="salomon.core.remote.RemoteController" base="${bin_dir}"/>
		<rmic classname="salomon.core.remote.RemoteManagerEngine" base="${bin_dir}"/>
		<rmic classname="salomon.core.remote.RemotePluginManager" base="${bin_dir}"/>
		<rmic classname="salomon.core.remote.RemoteProjectManager" base="${bin_dir}"/>
		<rmic classname="salomon.core.remote.RemoteTaskManager" base="${bin_dir}"/>
		<rmic classname="salomon.core.remote.RemoteTask" base="${bin_dir}"/>
		<rmic classname="salomon.core.remote.RemoteProject" base="${bin_dir}"/>
	</target>

	<target name="all" depends="copy_salomon, copy_plugins, copy_libs, copy_drivers, copy_data_base, copy_res, copy_config"/>

	<target name="compress" depends="all">			
 		<zip destfile="salomon.zip"
		basedir="${release_dir}"
		/>
	</target>

	<target name="clean">
		<delete dir="${bin_dir}" />		
	</target>	
	
</project>
