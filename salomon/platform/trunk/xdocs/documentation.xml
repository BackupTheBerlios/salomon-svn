<?xml version="1.0"?>


<document>

  <properties>
    <title>Documentantion</title>
    <author email="qoooba@student.uci.agh.edu.pl">Jakub Pawlowski</author>
  </properties>

  <body>
      <section name="Salomon Documentation">
          <p>
		Salomon is a system that ralizes the conception of Knowledge Minig. Salomon 
		consists of environment (core) and plug-ins:
		<ul>
		 <li><b>Core</b> manages and distributes tasks as well  as gives environment in 
		 which plug-ins operate.</li>
		 <li><b>Plug-ins</b> are responsible for operating on data, knowledge creation, 
		 displaying results etc. They implement logic of the specified task. They can be
		  dynamically loaded and unloaded.</li>
		</ul>
		
		<p>Thanks to the core plug-ins are separated from details of implementation and 
		operate on very high level of abstraction using API given by the core.</p>
		
		<p>Interaction with user can be implemented in various ways: as a standalone 
		application, distributed system, agent system, a library which can be used by 
		other programs, etc. This layer(presentation layer) is very flexible and can be 
		easily extended. User can also switch between different presentation views.</p>
		
		<p>Thanks to <i>Salomon</i> we can implement iterative learning model(one of the
		 basic concepts of knowledge mining) which assumes that knowledge created in one
		  iteration can be used for knowledge creation in the other one.</p>
		
		<p><i>Salomon</i> enables the communication between tasks. For example: we 
		create at the beginning a learning set, first plug-in extracts some rules from 
		this set which are later enhanced by other plug-ins. At the end the last 
		plug-in presents the results to the user.</p>
		
		<p>Tasks can be connected(by pipes), they can create loops and generally they 
		can be organized in a graph. Because database layer is separated from plug-ins, 
		databases do not have to be exactly the same, they only need to have common 
		attributes defined in our API. If we have for example some databases in 
		hospitals which store data about patients, diseases etc. we do not need to 
		synchronize them and change their format, plug-ins can extract knowledge from 
		what is available for them and thanks to distribution of <i>Salomon</i> share 
		with other plug-ins everything they have learned.</p>
		
		<p><i>Salomon</i> is portable between different operating systems(Windows, 
		Linux, MacOS, Solaris, FreeBSD, etc.). We have also put a lot of effort in 
		ensuring integrity of data, so all operations are atomic and treated as a 
		transaction - if something fails, all changes made by this operation until 
		the failure are rolled back.</p>   
    </section>
  </body>
</document>
